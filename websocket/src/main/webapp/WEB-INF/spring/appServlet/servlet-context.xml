<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!--html문서를 요청하거나 또는 resources폴더와 다른곳의 css, js리소스를 인식하게 해준다.
	    default-servlet-handler가 요청받은 것을 디폴트 서블릿(DispatcherServlet)에 처리요청을 한다. -->
	<default-servlet-handler/>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.board.icia" />

	<!-- dbcp Bean -->
	<beans:bean class="org.springframework.jndi.JndiObjectFactoryBean" id="dataSource">
		<beans:property name="jndiName" value="jdbc/OracleDB" />
		<beans:property name="resourceRef" value="true" />
	</beans:bean>
	<!-- sqlSessionFactory & sqlSession -->
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property value="/WEB-INF/mybatis/mybatis-conf.xml" name="configLocation" />
		<beans:property value="/WEB-INF/mybatis/mapper/*.xml" name="mapperLocations" />
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>

	<!-- Transaction Manager -->
	<tx:annotation-driven /> <!-- @Transactional 사용하기 위해서 -->
	<!-- id명을 반드시 transactionManager로 해야 한다. -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<!-- 파일 첨부(Multipart Resolver 설정): form태그가 enctype="multipart/form-data"인 
		경우 서버의 Bean으로 전달해줌 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="10000000" /><!-- 
			10MB -->
		<beans:property name="maxInMemorySize" value="10000000" /><!-- 
			10MB -->
	</beans:bean>

	<beans:bean id="chatHandler" class="com.board.icia.socket.ChatSocketHandler"/>
	<websocket:handlers>
        <websocket:mapping path="chat" handler="chatHandler"/>
    </websocket:handlers>
</beans:beans>
